// schema.prisma

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

// NFT Metadata Collection
model NFTMetadata {
    id              String   @id @default(auto()) @map("_id") @db.ObjectId
    contractAddress String   @db.String
    tokenId         String
    name            String
    description     String
    imageUrl        String
    createdAt       DateTime @default(now())
}

// Transactions Collection
model Transaction {
    id                String   @id @default(auto()) @map("_id") @db.ObjectId
    address           String
    blockNumber       Int
    timeStamp         DateTime
    hash              String   @unique
    nonce             Int
    blockHash         String
    transactionIndex  Int
    from              String
    to                String
    value             String
    gas               String
    gasPrice          String
    isError           String
    txreceipt_status  String
    input             String
    contractAddress   String
    cumulativeGasUsed String
    gasUsed           String
    confirmations     Int
    methodId          String?
    functionName      String?
}

// IPFS Data Collection
model IPFSData {
    id        String   @id @default(auto()) @map("_id") @db.ObjectId
    data      String
    ipfsHash  String
    createdAt DateTime @default(now())
}

// Token Balance Collection
model TokenBalance {
    id              String   @id @default(auto()) @map("_id") @db.ObjectId
    contractAddress String   @db.String
    walletAddress   String   @db.String
    balance         String
    updatedAt       DateTime @default(now()) @updatedAt
}

// Smart Contract Transactions Collection
model SmartContractTransaction {
    id              String   @id @default(auto()) @map("_id") @db.ObjectId
    fromAddress     String
    toAddress       String
    tokenAmount     String
    transactionHash String
    createdAt       DateTime @default(now())
}
